version: "3.1"
services:
    redis:
      image: redis:alpine
      container_name: vs-api-redis
    adminer:
        image: adminer
        container_name: vs-api-adminer
        restart: always
        ports:
            - 8889:8080
        networks:
        - mysql-compose-network
    mysqlsrv:
      image: mysql:5.7
      container_name: vs-api-mysql
      ports:
        - "3306:3306"
      volumes:
        - ./mysql/data:/var/lib/mysql
      environment:
        - MYSQL_ROOT_PASSWORD="r00tv573ch"
        - MYSQL_DATABASE="vstech"
        - MYSQL_USER="ldr"
        - MYSQL_PASSWORD="ldr.pass"
      networks:
        - mysql-compose-network
    elasticsearch:
      image: elasticsearch:6.5.4
      container_name: vs-api-elasticsearch
    webserver:
      image: nginx:alpine
      container_name: vs-api-webserver
      working_dir: /application
      volumes:
          - ./src:/application
          - ./phpdocker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
       - 8888:80
    php-fpm:
      build: phpdocker/php-fpm
      container_name: vs-api-php-fpm
      working_dir: /application
      volumes:
        - ./src:/application
        - ./phpdocker/php-fpm/php-ini-overrides.ini:/etc/php/7.1/fpm/conf.d/99-overrides.ini
networks: 
  mysql-compose-network:
    driver: bridge